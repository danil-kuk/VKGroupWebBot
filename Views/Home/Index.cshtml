@model WebBot.Models.ConfigModel
@{
    ViewData["Title"] = "Home Page";
}
@if (TempData["message"] != null)
{
    string alertType = "alert alert-" + TempData["alertType"];
    <div class="@alertType">
        @TempData["message"]
    </div>
}
@switch (PermanentValues.BotStatus)
{
    case BotStatus.NotWorking:
        {
            <div class="text-center">
                <h2>Настройки</h2>
            </div>
            <form method="post" enctype="multipart/form-data" role="form" asp-action="StartBot" asp-controller="Home">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "Не удалось создать бота, попробуйте снова")
                    <div class="form-group">
                        @Html.LabelFor(model => model.Token)
                        @Html.EditorFor(model => model.Token, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Token, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.GroupId)
                        @Html.EditorFor(model => model.GroupId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AdminIds)
                        @Html.EditorFor(model => model.AdminIds, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdminIds, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SpreadsheetId)
                        @Html.EditorFor(model => model.SpreadsheetId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpreadsheetId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <p>Файл конфигурации Google Sheet Bot:</p>
                        <input type="file" name="botfile" required>
                    </div>
                    <input type="submit" value="Запустить" class="btn btn-primary" id="start-btn" />
                }
            </form>
            break;
        }
    case BotStatus.Working:
        {
            <div class="text-center">
                <h2>Бот работает</h2>
            </div>
            <textarea style="width:100%;height:500px;">@Logger.GetLogString()</textarea>
            <div class="container" id="btn-container">
                @Html.ActionLink("Обновить", "Refresh", "Home", htmlAttributes: new { @class = "btn btn-primary" })
                @Html.ActionLink("Очистить", "ClearLogs", "Home", htmlAttributes: new { @class = "btn btn-secondary" })
            </div>
            break;
        }
    case BotStatus.ReadyForRestart:
        {
            <div class="text-center">
                <h2>Бот требует перезапуска</h2>
            </div>
            <textarea style="width:100%;height:400px;">@Logger.GetLogString()</textarea>
            <div class="container" id="btn-container">
                @Html.ActionLink("Перезапустить", "RestartBot", "Home", htmlAttributes: new { @class = "btn btn-primary" })
                @Html.ActionLink("Сброс", "ResetBot", "Home", htmlAttributes: new { @class = "btn btn-secondary" })
            </div>
            break;
        }
}
